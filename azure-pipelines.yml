# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
  branches:
    include:
      - refs/heads/*
      - refs/tags/*

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    mac:
      imageName: 'macos-10.14'
      arch: 'arm64'
    windows:
      imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName)

steps:

# Linux
- bash: |
    curl -O https://www.libsdl.org/release/SDL2-2.0.9.tar.gz
    curl -O https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.4.tar.gz
    tar -xzf SDL2-2.0.9.tar.gz
    tar -xzf SDL2_mixer-2.0.4.tar.gz
    pushd SDL2-2.0.9/ 
    mkdir $HOME/SDL
    ./configure --prefix=$HOME/SDL
    make
    make install    
    export PATH=$HOME/SDL/bin:$PATH
    popd    
    pushd SDL2_mixer-2.0.4/ 
    mkdir $HOME/SDL_mixer
    ./configure --prefix=$HOME/SDL
    make
    make install    
    popd    
    make
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'make'

- task: CopyFiles@2
  condition: eq( variables['Agent.OS'], 'Linux' )
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'libagswaves.so'
    targetFolder: $(Build.ArtifactStagingDirectory)

# macOS
- bash: |
    pushd ~
    curl -O https://www.libsdl.org/release/SDL2-2.0.9.dmg --output SDL2-2.0.9.dmg 
    curl -O https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-2.0.4.dmg --output SDL2_mixer-2.0.4.dmg
    hdiutil attach SDL2-2.0.9.dmg
    sudo cp -a /Volumes/SDL2/SDL2.framework /Library/Frameworks/
    pushd /Library/Frameworks/SDL2.framework/
    codesign -f -s - SDL2
    popd
    hdiutil attach SDL2_mixer-2.0.4.dmg    
    sudo cp -a /Volumes/SDL2_mixer/SDL2_mixer.framework /Library/Frameworks/
    pushd /Library/Frameworks/SDL2_mixer.framework/
    codesign -f -s - SDL2_mixer
    popd
    popd
    make
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'make'

- task: CopyFiles@2
  condition: eq( variables['Agent.OS'], 'Darwin' )
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'libagswaves.dylib'
    targetFolder: $(Build.ArtifactStagingDirectory)
# Windows
- bash: |
    curl -O https://www.libsdl.org/release/SDL2-devel-2.0.9-VC.zip
    curl -O https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-devel-2.0.4-VC.zip
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: 'downloadSDL'

- powershell: |
    mkdir C:\Dev
    7z x -y "SDL2-devel-2.0.9-VC.zip" -o"C:\Dev"
    7z x -y "SDL2_mixer-devel-2.0.4-VC.zip" -o"C:\Dev"
    Rename-Item C:\Dev\SDL2_mixer-2.0.4 C:\Dev\SDL2_mixer
    Rename-Item C:\Dev\SDL2-2.0.9 C:\Dev\SDL2
  condition: eq( variables['Agent.OS'], 'Windows_NT' )   
  displayName: 'extractSDL'

- task: VSBuild@1
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  inputs:
    solution: 'vs2017\AGSWaves.sln' 
    platform: win32
    configuration: Release

- task: CopyFiles@2
  condition: eq( variables['Agent.OS'], 'Windows_NT' )   
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)/vs2017/Release'
    contents: 'AGSWaves.dll'
    targetFolder: $(Build.ArtifactStagingDirectory)

- bash: |
    echo "##vso[task.setvariable variable=tagname]$(git describe --tags $(git rev-list --tags --max-count=1))"
# Upload to Github Release
- task: GithubRelease@0 
  displayName: 'Edit GitHub Release'      
  inputs:
    gitHubConnection: agswaves
    repositoryName: Dualnames1/AGSWaves
    tagSource: 'auto'#manual
    tag: 'Final'
    assetUploadMode: 'replace'
    action: 'edit'     
    assets: |
      $(Build.ArtifactStagingDirectory)/*.dll
      $(Build.ArtifactStagingDirectory)/*.so
      $(Build.ArtifactStagingDirectory)/*.dylib    
